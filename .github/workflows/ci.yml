name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'ComfyUI_SaveImageWithMetaDataUniversal/**'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'
      - '.pre-commit-config.yaml'
      - '.coveragerc'
  pull_request:
    branches: [ main ]
    paths:
      - 'ComfyUI_SaveImageWithMetaDataUniversal/**'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'
      - '.pre-commit-config.yaml'
      - '.coveragerc'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint & Test (Python)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies (project + dev)
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]; then
            # Install project in editable mode with dev extras
            pip install -e .[dev]
          else
            pip install ruff pytest
          fi

      - name: Ruff Lint
        run: |
          ruff check .

      - name: Run Tests
        env:
          PYTHONPATH: .
        run: |
          coverage run -m pytest -q
          coverage xml -o coverage.xml

      - name: pip-audit (non-fatal)
        continue-on-error: true
        run: |
          pip-audit || true

      - name: Upload pytest results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs-${{ matrix.python-version }}
          path: ./.pytest_cache
          if-no-files-found: ignore

      - name: Upload coverage (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: coverage-${{ matrix.python-version }}
            path: coverage.xml
            if-no-files-found: ignore

  build-badge:
    if: github.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Generate status badge (placeholder)
        run: echo "Badge generation could be integrated here (e.g. shields.io custom)."
