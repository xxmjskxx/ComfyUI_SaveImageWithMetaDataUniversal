[project]
name = "SaveImageWithMetaDataUniversal"
description = """
Node for saving PNGs, WEBPs, and JPEGs with rich automatically captured metadata from any node: prompts, model/VAE/LoRA names & hashes, sampler & scheduler (Civitai-compatible), optional workflow embedding, dynamic rule scanning + forced include system, deterministic ordering, filename tokens, and staged JPEG metadata fallback.
"""
version = "1.1.2"
license = { file = "LICENSE" }

[project.urls]
Repository = "https://github.com/xxmjskxx/ComfyUI_SaveImageWithMetaDataUniversal"
#  Used by Comfy Registry https://comfyregistry.org

[tool.comfy]
PublisherId = "mjsk"
DisplayName = "Save Image with Metadata Universal"
Icon = "img/logo.svg"


[project.optional-dependencies]
dev = [
    "mypy",  # linting
    "ruff",
    "pytest",
    "bump-my-version",
    "coverage",  # testing
    "pip-audit",
    "pre-commit",
    "PyYAML",  # testing
]

[tool.ruff]
line-length = 140
target-version = "py39"  # Adjust based on your Python version
# extend-exclude = ["static", "ci/templates"]
src = ["src", "tests"]
exclude = ["*cookiecutter.project_slug*"]


[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "E402",  # Module level import not at top of file
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

# [tool.ruff.format]
# quote-style = "double"
# indent-style = "space"

# Pytest configuration
[tool.pytest.ini_options]
python_files = ["test_*.py"]
python_functions = ["test_*"]
minversion = "6.0"
# addopts = "-ra -q"
testpaths = [
    "tests",
]